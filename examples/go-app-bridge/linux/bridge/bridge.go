/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: bridge/bridge.i

package bridge

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef ptrdiff_t intgo;
typedef size_t uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_bridge_4f8f469d86e6b224(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_bridge_4f8f469d86e6b224(swig_intgo arg1);
extern uintptr_t _wrap__swig_NewDirectorCallbackCallback_bridge_4f8f469d86e6b224(int);
extern void _wrap_DeleteDirectorCallback_bridge_4f8f469d86e6b224(uintptr_t arg1);
extern void _wrap__swig_DirectorCallback_upcall_Status_bridge_4f8f469d86e6b224(uintptr_t, swig_intgo status);
extern void _wrap_delete_Callback_bridge_4f8f469d86e6b224(uintptr_t arg1);
extern void _wrap_Callback_status_bridge_4f8f469d86e6b224(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_Callback_bridge_4f8f469d86e6b224(void);
extern uintptr_t _wrap_new_Bridge_bridge_4f8f469d86e6b224(void);
extern void _wrap_delete_Bridge_bridge_4f8f469d86e6b224(uintptr_t arg1);
extern void _wrap_Bridge_delCallback_bridge_4f8f469d86e6b224(uintptr_t arg1);
extern void _wrap_Bridge_setCallback_bridge_4f8f469d86e6b224(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Bridge_status_bridge_4f8f469d86e6b224(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Bridge_start_bridge_4f8f469d86e6b224(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
#undef intgo
*/
import "C"

import "syscall"
import "unsafe"
import "sync"


type _ syscall.Sockaddr




type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_bridge_4f8f469d86e6b224(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type _swig_DirectorCallback struct {
	SwigcptrCallback
	v interface{}
}

func (p *_swig_DirectorCallback) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrCallback)
}

func (p *_swig_DirectorCallback) SwigIsCallback() {
}

func (p *_swig_DirectorCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorCallback(v interface{}) Callback {
	p := &_swig_DirectorCallback{0, v}
	p.SwigcptrCallback = SwigcptrCallback(C._wrap__swig_NewDirectorCallbackCallback_bridge_4f8f469d86e6b224(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorCallback(arg1 Callback) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorCallback_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Callback_bridge_4f8f469d86e6b224
func Swiggo_DeleteDirector_Callback_bridge_4f8f469d86e6b224(c int) {
	swigDirectorLookup(c).(*_swig_DirectorCallback).SwigcptrCallback = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceCallbackStatus interface {
	Status(int)
}

func (swig_p *_swig_DirectorCallback) Status(status int) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCallbackStatus); swig_ok {
		swig_g.Status(status)
		return
	}
	_swig_i_0 := status
	C._wrap__swig_DirectorCallback_upcall_Status_bridge_4f8f469d86e6b224(C.uintptr_t(swig_p.SwigcptrCallback), C.swig_intgo(_swig_i_0))
}

func DirectorCallbackStatus(swig_p Callback, status int) {
	_swig_i_0 := status
	C._wrap__swig_DirectorCallback_upcall_Status_bridge_4f8f469d86e6b224(C.uintptr_t(swig_p.(*_swig_DirectorCallback).SwigcptrCallback), C.swig_intgo(_swig_i_0))
}

//export Swig_DirectorCallback_callback_status_bridge_4f8f469d86e6b224
func Swig_DirectorCallback_callback_status_bridge_4f8f469d86e6b224(swig_c int, arg2 int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCallback)
	swig_p.Status(arg2)
}

type SwigcptrCallback uintptr

func (p SwigcptrCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCallback) SwigIsCallback() {
}

func (p SwigcptrCallback) DirectorInterface() interface{} {
	return nil
}

func DeleteCallback(arg1 Callback) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Callback_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCallback) Status(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Callback_status_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func NewCallback() (_swig_ret Callback) {
	var swig_r Callback
	swig_r = (Callback)(SwigcptrCallback(C._wrap_new_Callback_bridge_4f8f469d86e6b224()))
	return swig_r
}

type Callback interface {
	Swigcptr() uintptr
	SwigIsCallback()
	DirectorInterface() interface{}
	Status(arg2 int)
}

type SwigcptrBridge uintptr

func (p SwigcptrBridge) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBridge) SwigIsBridge() {
}

func NewBridge() (_swig_ret Bridge) {
	var swig_r Bridge
	swig_r = (Bridge)(SwigcptrBridge(C._wrap_new_Bridge_bridge_4f8f469d86e6b224()))
	return swig_r
}

func DeleteBridge(arg1 Bridge) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Bridge_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBridge) DelCallback() {
	_swig_i_0 := arg1
	C._wrap_Bridge_delCallback_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBridge) SetCallback(arg2 Callback) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Bridge_setCallback_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBridge) Status(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Bridge_status_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrBridge) Start(arg2 int, arg3 *string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Bridge_start_bridge_4f8f469d86e6b224(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

type Bridge interface {
	Swigcptr() uintptr
	SwigIsBridge()
	DelCallback()
	SetCallback(arg2 Callback)
	Status(arg2 int)
	Start(arg2 int, arg3 *string) (_swig_ret int)
}


type SwigcptrSwigDirector_Callback uintptr
type SwigDirector_Callback interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Callback) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


